Modeling platform-driven APIs.
It should be possible to construct classes in various ways and use them together. For example:

jvm = Rift::JVM.new
Foo = jvm.link('com.app.Foo')
library = Rift::HeaderContext.new('/usr/include/')
UUID = library.link('uuid.h')

It isn't necessarily obvious how to link this stuff. In particular, how should GC be handled? This is managed by an interpretation bias, which dictates things like how primitive arguments are
interpreted.
